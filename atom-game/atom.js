import GameObject from "/atom-game/object.js";

const elements = [
  "Hydrogen",
  "Helium",
  "Lithium",
  "Beryllium",
  "Boron",
  "Carbon",
  "Nitrogen",
  "Oxygen",
  "Fluorine",
  "Neon",
  "Sodium",
  "Magnesium",
  "Aluminum",
  "Silicon",
  "Phosphorus",
  "Sulfur",
  "Chlorine",
  "Argon",
  "Potassium",
  "Calcium",
  "Scandium",
  "Titanium",
  "Vanadium",
  "Chromium",
  "Manganese",
  "Iron",
  "Cobalt",
  "Nickel",
  "Copper",
  "Zinc",
  "Gallium",
  "Germanium",
  "Arsenic",
  "Selenium",
  "Bromine",
  "Krypton",
  "Rubidium",
  "Strontium",
  "Yttrium",
  "Zirconium",
  "Niobium",
  "Molybdenum",
  "Technetium",
  "Ruthenium",
  "Rhodium",
  "Palladium",
  "Silver",
  "Cadmium",
  "Indium",
  "Tin",
  "Antimony",
  "Tellurium",
  "Iodine",
  "Xenon",
  "Cesium",
  "Barium",
  "Lanthanum",
  "Cerium",
  "Praseodymium",
  "Neodymium",
  "Promethium",
  "Samarium",
  "Europium",
  "Gadolinium",
  "Terbium",
  "Dysprosium",
  "Holmium",
  "Erbium",
  "Thulium",
  "Ytterbium",
  "Lutetium",
  "Hafnium",
  "Tantalum",
  "Tungsten",
  "Rhenium",
  "Osmium",
  "Iridium",
  "Platinum",
  "Gold",
  "Mercury",
  "Thallium",
  "Lead",
  "Bismuth",
  "Polonium",
  "Astatine",
  "Radon",
  "Francium",
  "Radium",
  "Actinium",
  "Thorium",
  "Protactinium",
  "Uranium",
  "Neptunium",
  "Plutonium",
  "Americium",
  "Curium",
  "Berkelium",
  "Californium",
  "Einsteinium",
  "Fermium",
  "Mendelevium",
  "Nobelium",
  "Lawrencium",
  "Rutherfordium",
  "Dubnium",
  "Seaborgium",
  "Bohrium",
  "Hassium",
  "Meitnerium",
  "Darmstadtium",
  "Roentgenium",
  "Copernicium",
  "Nihonium",
  "Flerovium",
  "Moscovium",
  "Livermorium",
  "Tennessine",
  "Oganesson"
];

const symbols = [
  "H",
  "He",
  "Li",
  "Be",
  "B",
  "C",
  "N",
  "O",
  "F",
  "Ne",
  "Na",
  "Mg",
  "Al",
  "Si",
  "P",
  "S",
  "Cl",
  "Ar",
  "K",
  "Ca",
  "Sc",
  "Ti",
  "V",
  "Cr",
  "Mn",
  "Fe",
  "Co",
  "Ni",
  "Cu",
  "Zn",
  "Ga",
  "Ge",
  "As",
  "Se",
  "Br",
  "Kr",
  "Rb",
  "Sr",
  "Y",
  "Zr",
  "Nb",
  "Mo",
  "Tc",
  "Ru",
  "Rh",
  "Pd",
  "Ag",
  "Cd",
  "In",
  "Sn",
  "Sb",
  "Te",
  "I",
  "Xe",
  "Cs",
  "Ba",
  "La",
  "Ce",
  "Pr",
  "Nd",
  "Pm",
  "Sm",
  "Eu",
  "Gd",
  "Tb",
  "Dy",
  "Ho",
  "Er",
  "Tm",
  "Yb",
  "Lu",
  "Hf",
  "Ta",
  "W",
  "Re",
  "Os",
  "Ir",
  "Pt",
  "Au",
  "Hg",
  "Tl",
  "Pb",
  "Bi",
  "Po",
  "At",
  "Rn",
  "Fr",
  "Ra",
  "Ac",
  "Th",
  "Pa",
  "U",
  "Np",
  "Pu",
  "Am",
  "Cm",
  "Bk",
  "Cf",
  "Es",
  "Fm",
  "Md",
  "No",
  "Lr",
  "Rf",
  "Db",
  "Sg",
  "Bh",
  "Hs",
  "Mt",
  "Ds",
  "Rg",
  "Cn",
  "Nh",
  "Fl",
  "Mc",
  "Lv",
  "Ts",
  "Og"
];

const shells = [
  ["1"],
  ["2"],
  ["2", "1"],
  ["2", "2"],
  ["2", "3"],
  ["2", "4"],
  ["2", "5"],
  ["2", "6"],
  ["2", "7"],
  ["2", "8"],
  ["2", "8", "1"],
  ["2", "8", "2"],
  ["2", "8", "3"],
  ["2", "8", "4"],
  ["2", "8", "5"],
  ["2", "8", "6"],
  ["2", "8", "7"],
  ["2", "8", "8"],
  ["2", "8", "8", "1"],
  ["2", "8", "8", "2"],
  ["2", "8", "9", "2"],
  ["2", "8", "10", "2"],
  ["2", "8", "11", "2"],
  ["2", "8", "12", "2"],
  ["2", "8", "13", "2"],
  ["2", "8", "14", "2"],
  ["2", "8", "15", "2"],
  ["2", "8", "16", "2"],
  ["2", "8", "17", "2"],
  ["2", "8", "18", "2"],
  ["2", "8", "18", "3"],
  ["2", "8", "18", "4"],
  ["2", "8", "18", "5"],
  ["2", "8", "18", "6"],
  ["2", "8", "18", "7"],
  ["2", "8", "18", "8"],
  ["2", "8", "18", "8", "1"],
  ["2", "8", "18", "8", "2"],
  ["2", "8", "18", "9", "2"],
  ["2", "8", "18", "10", "2"],
  ["2", "8", "18", "11", "2"],
  ["2", "8", "18", "12", "2"],
  ["2", "8", "18", "13", "2"],
  ["2", "8", "18", "14", "2"],
  ["2", "8", "18", "15", "2"],
  ["2", "8", "18", "16", "2"],
  ["2", "8", "18", "17", "2"],
  ["2", "8", "18", "18", "2"],
  ["2", "8", "18", "18", "3"],
  ["2", "8", "18", "18", "4"],
  ["2", "8", "18", "18", "5"],
  ["2", "8", "18", "18", "6"],
  ["2", "8", "18", "18", "7"],
  ["2", "8", "18", "18", "8"],
  ["2", "8", "18", "18", "8", "1"],
  ["2", "8", "18", "18", "8", "2"],
  ["2", "8", "18", "18", "9", "2"],
  ["2", "8", "18", "19", "9", "2"],
  ["2", "8", "18", "21", "8", "2"],
  ["2", "8", "18", "22", "8", "2"],
  ["2", "8", "18", "23", "8", "2"],
  ["2", "8", "18", "24", "8", "2"],
  ["2", "8", "18", "25", "8", "2"],
  ["2", "8", "18", "26", "8", "2"],
  ["2", "8", "18", "27", "8", "2"],
  ["2", "8", "18", "28", "8", "2"],
  ["2", "8", "18", "29", "8", "2"],
  ["2", "8", "18", "30", "8", "2"],
  ["2", "8", "18", "31", "8", "2"],
  ["2", "8", "18", "32", "8", "2"],
  ["2", "8", "18", "32", "9", "2"],
  ["2", "8", "18", "32", "10", "2"],
  ["2", "8", "18", "32", "11", "2"],
  ["2", "8", "18", "32", "12", "2"],
  ["2", "8", "18", "32", "13", "2"],
  ["2", "8", "18", "32", "14", "2"],
  ["2", "8", "18", "32", "15", "2"],
  ["2", "8", "18", "32", "16", "2"],
  ["2", "8", "18", "32", "17", "2"],
  ["2", "8", "18", "32", "18", "2"],
  ["2", "8", "18", "32", "18", "3"],
  ["2", "8", "18", "32", "18", "4"],
  ["2", "8", "18", "32", "18", "5"],
  ["2", "8", "18", "32", "18", "6"],
  ["2", "8", "18", "32", "18", "7"],
  ["2", "8", "18", "32", "18", "8"],
  ["2", "8", "18", "32", "18", "8", "1"],
  ["2", "8", "18", "32", "18", "8", "2"],
  ["2", "8", "18", "32", "18", "9", "2"],
  ["2", "8", "18", "32", "18", "10", "2"],
  ["2", "8", "18", "32", "20", "9", "2"],
  ["2", "8", "18", "32", "21", "9", "2"],
  ["2", "8", "18", "32", "22", "9", "2"],
  ["2", "8", "18", "32", "23", "9", "2"],
  ["2", "8", "18", "32", "24", "9", "2"],
  ["2", "8", "18", "32", "25", "9", "2"],
  ["2", "8", "18", "32", "26", "9", "2"],
  ["2", "8", "18", "32", "27", "9", "2"],
  ["2", "8", "18", "32", "28", "9", "2"],
  ["2", "8", "18", "32", "29", "9", "2"],
  ["2", "8", "18", "32", "30", "9", "2"],
  ["2", "8", "18", "32", "31", "9", "2"],
  ["2", "8", "18", "32", "32", "9", "2"],
  ["2", "8", "18", "32", "32", "10", "2"],
  ["2", "8", "18", "32", "32", "11", "2"],
  ["2", "8", "18", "32", "32", "12", "2"],
  ["2", "8", "18", "32", "32", "13", "2"],
  ["2", "8", "18", "32", "32", "14", "2"],
  ["2", "8", "18", "32", "32", "15", "2"],
  ["2", "8", "18", "32", "32", "16", "2"],
  ["2", "8", "18", "32", "32", "17", "2"],
  ["2", "8", "18", "32", "32", "18", "2"],
  ["2", "8", "18", "32", "32", "18", "3"],
  ["2", "8", "18", "32", "32", "18", "4"],
  ["2", "8", "18", "32", "32", "18", "5"],
  ["2", "8", "18", "32", "32", "18", "6"],
  ["2", "8", "18", "32", "32", "18", "7"],
  ["2", "8", "18", "32", "32", "18", "8"]
];

const TAU = Math.PI * 2;

export default class Atom extends GameObject {
  constructor(game, x = 0, y = 0) {
    super(game, x, y);

    this.neutrons = 0;

    this._protons = null;
    this.protons = 16;

    this.element = "Hydrogen";
    this.symbol = "H";
    this.electrons = 1;
    this.isotope = this.protons + this.neutrons;
  }
  draw(ctx) {
    shells[this.protons - 1].forEach((v, i) => {
      ctx.beginPath();
      ctx.arc(
        this.game.fx(this.x),
        this.game.fy(this.y),
        15 * (i + 1),
        0,
        2 * Math.PI
      );
      ctx.lineWidth = 2;
      ctx.stroke();
      for (let j = 0; j < v; j++) {
        ctx.beginPath();
        let val = this.game.time / 500 / Math.sqrt(i + 1) - (j * TAU) / v;
        let neg = i % 2 === 0 ? 1 : -1;
        ctx.arc(
          this.game.fx(neg * 15 * (i + 1) * Math.sin(val) + this.x),
          this.game.fy(15 * (i + 1) * Math.cos(val) + this.y),
          3,
          0,
          2 * Math.PI
        ); // Arc for a full circle
        ctx.fillStyle = "#031926";
        ctx.fill();
        ctx.closePath();
      }
    });
  }
  set protons(v) {
    this._protons = v;
    this.element = elements[this.protons - 1];
    this.symbol = symbols[this.protons - 1];
    this.electrons = this.protons;
    this.isotope = this.protons + this.neutrons;
    console.log(`The atom is ${this.element}-${this.isotope} (${this.symbol})`);
  }
  get protons() {
    return this._protons;
  }
  update(deltaTime) {
    //this.x += 0.1 * deltaTime;
  }
}
